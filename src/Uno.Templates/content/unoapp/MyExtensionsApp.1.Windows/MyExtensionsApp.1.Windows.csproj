<Project Sdk="Uno.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>$(DotNetVersion)-windows10.0.19041.0</TargetFramework>
    <RootNamespace>MyExtensionsApp.1.Windows</RootNamespace>
    <Platforms>x86;x64;arm64</Platforms>

    <!--#if (useWinAppSdkSelfContained)-->
    <!-- Bundles the WinAppSDK binaries -->
    <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
    <!--#else-->
    <!-- Bundles the WinAppSDK binaries (Uncomment for unpackaged builds) -->
    <!-- <WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained> -->
    <!--#endif-->

    <!-- <SelfContained>true</SelfContained> -->
  </PropertyGroup>

  <!--#if (useCPM)-->
  <ItemGroup>
    <!--#if (!mauiEmbedding)-->
    <PackageReference Include="Microsoft.WindowsAppSDK" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" />
    <!--#else-->
    <PackageReference Include="Microsoft.WindowsAppSDK" VersionOverride="$MicrosoftWindowsAppSDK$" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" VersionOverride="$MicrosoftWindowsSDKBuildTools$" />
    <!--#endif-->
    <PackageReference Include="Uno.Core.Extensions.Logging.Singleton" />
    <PackageReference Include="Uno.UI.Adapter.Microsoft.Extensions.Logging" />
    <!--#if (mauiEmbedding)-->
    <PackageReference Include="Microsoft.Maui.Controls" />
    <PackageReference Include="Microsoft.Maui.Controls.Compatibility" />
    <!--#endif -->
  </ItemGroup>
  <!--#else-->
  <ItemGroup>
    <PackageReference Include="Uno.Resizetizer" Version="$UnoResizetizerVersion$" />
    <!--#if (!mauiEmbedding)-->
    <PackageReference Include="Microsoft.WindowsAppSDK" Version="$MicrosoftWindowsAppSDK$" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" Version="$MicrosoftWindowsSDKBuildTools$" />
    <!--#else-->
    <PackageReference Include="Microsoft.WindowsAppSDK" VersionOverride="$MicrosoftWindowsAppSDK$" />
    <PackageReference Include="Microsoft.Windows.SDK.BuildTools" VersionOverride="$MicrosoftWindowsSDKBuildTools$" />
    <!--#endif-->
    <PackageReference Include="Uno.Core.Extensions.Logging.Singleton" Version="$UnoCoreExtensionsLoggingVersion$" />
    <PackageReference Include="Uno.UI.Adapter.Microsoft.Extensions.Logging" Version="$(UnoVersion)" />
    <!--#if (mauiEmbedding)-->
    <PackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)" />
    <PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)" />
    <!--#endif -->
  </ItemGroup>
  <!--#endif-->

  <ItemGroup>
    <!--
    If you encounter this error message:

      error NETSDK1148: A referenced assembly was compiled using a newer version of Microsoft.Windows.SDK.NET.dll.
      Please update to a newer .NET SDK in order to reference this assembly.

    This means that the two packages below must be aligned with the "build" version number of
    the "Microsoft.Windows.SDK.BuildTools" package above, and the "revision" version number
    must be the highest found in https://www.nuget.org/packages/Microsoft.Windows.SDK.NET.Ref.
    -->
    <!-- <FrameworkReference Update="Microsoft.Windows.SDK.NET.Ref" RuntimeFrameworkVersion="10.0.22621.28" />
    <FrameworkReference Update="Microsoft.Windows.SDK.NET.Ref" TargetingPackVersion="10.0.22621.28" /> -->
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\MyExtensionsApp.1\MyExtensionsApp.1.csproj" />
    <!--#if (useHttp)-->
    <ProjectReference Include="..\MyExtensionsApp.1.DataContracts\MyExtensionsApp.1.DataContracts.csproj" />
    <!--#endif-->
  </ItemGroup>

  <Import Project="..\MyExtensionsApp.1.Shared\base.props" />

  <Target Name="ValidateOverrides" BeforeTargets="Restore;_CheckForUnsupportedTargetFramework" Condition="'$(OverrideTargetFramework)' != ''">
    <Error
        Text="OverrideTargetFramework set to '$(OverrideTargetFramework)' is missing Windows target. Set OverrideTargetFramework to $([MSBuild]::Escape('$'))(DotNetVersion)-windows10.0.19041.0 or skip building this project (eg unload the project in Visual Studio)"
        Condition="!$(OverrideTargetFramework.Contains('windows10'))" />
  </Target>
</Project>
