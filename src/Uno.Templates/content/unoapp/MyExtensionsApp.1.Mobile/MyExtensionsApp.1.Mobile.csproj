<Project Sdk="Uno.Sdk">
  <PropertyGroup>
    <TargetFrameworks>$mobileTargetFrameworks$</TargetFrameworks>
    <!--#if (useMacOS)-->
    <!-- Disabled because of https://github.com/xamarin/xamarin-macios/issues/16401-->
    <!-- <TargetFrameworks>$(TargetFrameworks);$(DotNetVersion)-macos</TargetFrameworks> -->
    <!--#endif-->
    <TargetFrameworks Condition="'$(OverrideTargetFramework)'!=''">$(OverrideTargetFramework)</TargetFrameworks>
    <SingleProject>true</SingleProject>
    <OutputType>Exe</OutputType>
    <!-- Display name -->
    <ApplicationTitle>MyExtensionsApp.1</ApplicationTitle>
    <!-- App Identifier -->
    <ApplicationId>com.companyname.myextensionsapp</ApplicationId>
    <ApplicationIdGuid>F5EAE47C-F7DF-4D61-8A30-92251720AC4B</ApplicationIdGuid>
    <!-- Versions -->
    <ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
    <ApplicationVersion>1</ApplicationVersion>

    <!-- Debugger workaround https://github.com/dotnet/maui-samples/blob/8aa6b8780b12e97b157514c3bdc54bb4a13001cd/HelloMacCatalyst/HelloMacCatalyst.csproj#L7 -->
    <!-- <MtouchExtraArgs Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">$(MtouchExtraArgs) -setenv:MONO_THREADS_SUSPEND=preemptive</MtouchExtraArgs> -->
    <!-- Required for C# Hot Reload -->
    <UseInterpreter Condition="'$(Configuration)' == 'Debug' and $([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) != 'maccatalyst'">True</UseInterpreter>
    <IsUnoHead>true</IsUnoHead>
  </PropertyGroup>

  <!--#if (useCPM)-->
  <ItemGroup>
    <PackageReference Include="Uno.Extensions.Logging.OSLog" />
    <PackageReference Include="Uno.UI.Adapter.Microsoft.Extensions.Logging" />
    <PackageReference Include="Uno.WinUI.DevServer" Condition="'$(Configuration)'=='Debug'" />
    <!--#if (mauiEmbedding)-->
    <PackageReference Include="Microsoft.Maui.Controls" />
    <PackageReference Include="Microsoft.Maui.Controls.Compatibility" />
    <!--#endif -->
  </ItemGroup>
  <!--#else-->
  <ItemGroup>
    <PackageReference Include="Uno.Resizetizer" Version="$UnoResizetizerVersion$" />
    <PackageReference Include="Uno.Extensions.Logging.OSLog" Version="$UnoExtensionsLoggingVersion$" />
    <PackageReference Include="Uno.UI.Adapter.Microsoft.Extensions.Logging" Version="$(UnoVersion)" />
    <PackageReference Include="Uno.WinUI.DevServer" Version="$(UnoVersion)" Condition="'$(Configuration)'=='Debug'" />
    <!--#if (mauiEmbedding)-->
    <PackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)" />
    <PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)" />
    <!--#endif -->
  </ItemGroup>
  <!--#endif-->
  <Choose>
    <!--#if (useAndroid)-->
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">
      <ItemGroup>
        <!--#if (mauiEmbedding)-->
        <PackageReference Include="Xamarin.Google.Android.Material" VersionOverride="$(AndroidMaterialVersion)" />
        <PackageReference Include="Xamarin.AndroidX.Navigation.UI" VersionOverride="$(AndroidXNavigationVersion)" />
        <PackageReference Include="Xamarin.AndroidX.Navigation.Fragment" VersionOverride="$(AndroidXNavigationVersion)" />
        <PackageReference Include="Xamarin.AndroidX.Navigation.Runtime" VersionOverride="$(AndroidXNavigationVersion)" />
        <PackageReference Include="Xamarin.AndroidX.Navigation.Common" VersionOverride="$(AndroidXNavigationVersion)" />
        <PackageReference Include="Xamarin.AndroidX.Collection" VersionOverride="$(AndroidXCollectionVersion)" />
        <PackageReference Include="Xamarin.AndroidX.Collection.Ktx" VersionOverride="$(AndroidXCollectionVersion)" />
        <!--#endif-->

        <!--#if (useCPM)-->
        <!--#if (useAndroidMaterial)-->
        <PackageReference Include="Xamarin.Google.Android.Material" />
        <!--#endif-->
        <PackageReference Include="Uno.UniversalImageLoader" />
        <!--#else-->
        <!--#if (useAndroidMaterial)-->
        <PackageReference Include="Xamarin.Google.Android.Material" Version="$XamarinGoogleAndroidMaterial$" />
        <!--#endif-->
        <PackageReference Include="Uno.UniversalImageLoader" Version="$UnoUniversalImageLoaderVersion$" />
        <!--#endif-->
      </ItemGroup>
    </When>
    <!--#endif-->
    <!--#if (useIOS)-->
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
      <PropertyGroup>
        <MtouchExtraArgs>$(MtouchExtraArgs) --setenv=MONO_GC_PARAMS=soft-heap-limit=512m,nursery-size=64m,evacuation-threshold=66,major=marksweep,concurrent-sweep</MtouchExtraArgs>
        <!-- See https://github.com/unoplatform/uno/issues/9430 for more details. -->
        <MtouchExtraArgs>$(MtouchExtraArgs) --registrar:static</MtouchExtraArgs>
        <RuntimeIdentifier Condition="'$(RuntimeIdentifier)'==''">iossimulator-x64</RuntimeIdentifier>
      </PropertyGroup>
      <PropertyGroup Condition="'$(Configuration)'=='Release'">
        <!-- https://github.com/xamarin/xamarin-macios/issues/14812 -->
        <MtouchExtraArgs>$(MtouchExtraArgs) --marshal-objectivec-exceptions:disable</MtouchExtraArgs>
      </PropertyGroup>
    </When>
    <!--#endif-->
    <!--#if (useMacCatalyst)-->
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">
      <PropertyGroup>
        <!-- Configure the GC -->
        <MtouchExtraArgs>$(MtouchExtraArgs) --setenv=MONO_GC_PARAMS=soft-heap-limit=512m,nursery-size=64m,evacuation-threshold=66,major=marksweep,concurrent-sweep</MtouchExtraArgs>
        <!-- Required for unknown crash as of .NET 6 Mobile Preview 13 -->
        <MtouchExtraArgs>$(MtouchExtraArgs) --registrar:static</MtouchExtraArgs>
        <!-- Full globalization is required for Uno -->
        <InvariantGlobalization>false</InvariantGlobalization>
        <RuntimeIdentifier Condition="'$(RuntimeIdentifier)'==''">maccatalyst-x64</RuntimeIdentifier>
      </PropertyGroup>
      <PropertyGroup Condition="'$(Configuration)'=='Release'">
        <!-- https://github.com/xamarin/xamarin-macios/issues/14812 -->
        <MtouchExtraArgs>$(MtouchExtraArgs) --marshal-objectivec-exceptions:disable</MtouchExtraArgs>
      </PropertyGroup>
    </When>
    <!--#endif-->
    <!--#if (useMacOS)-->
    <When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'macos'">
      <PropertyGroup>
        <TrimMode Condition="'$(Configuration)'=='Release'">link</TrimMode>
        <RuntimeIdentifier Condition="'$(RuntimeIdentifier)'==''">osx-x64</RuntimeIdentifier>
      </PropertyGroup>
    </When>
    <!--#endif-->
  </Choose>
  <ItemGroup>
    <ProjectReference Include="..\MyExtensionsApp.1\MyExtensionsApp.1.csproj" />
    <!--#if (useHttp)-->
    <ProjectReference Include="..\MyExtensionsApp.1.DataContracts\MyExtensionsApp.1.DataContracts.csproj" />
    <!--#endif-->
  </ItemGroup>
  <Import Project="..\MyExtensionsApp.1.Shared\base.props" />

  <Target Name="ValidateOverrides" BeforeTargets="Restore;_CheckForUnsupportedTargetFramework" Condition="'$(OverrideTargetFramework)' != ''">
    <Error
        Text="OverrideTargetFramework set to '$(OverrideTargetFramework)' is missing valid target. Set OverrideTargetFramework to one of the TargetFrameworks for this project or skip building this project (eg unload the project in Visual Studio)"
        Condition="$(OverrideTargetFramework.Contains('windows10')) or !$(OverrideTargetFrameork.Contains('-'))" />
  </Target>
</Project>
